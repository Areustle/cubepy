import numpy as np
from cubepy import point_gen


def test_fullsym():
    assert np.all(
        point_gen.pts_k0k1(np.zeros(4), 1, 2)
        == np.array(
            # fmt: off
        [[ 0,  0,  0,  0,], [-1,  0,  0,  0,], [ 1,  0,  0,  0,], [-2,  0,  0,  0,],
         [ 2,  0,  0,  0,], [ 0, -1,  0,  0,], [ 0,  1,  0,  0,], [ 0, -2,  0,  0,],
         [ 0,  2,  0,  0,], [ 0,  0, -1,  0,], [ 0,  0,  1,  0,], [ 0,  0, -2,  0,],
         [ 0,  0,  2,  0,], [ 0,  0,  0, -1,], [ 0,  0,  0,  1,], [ 0,  0,  0, -2,],
         [ 0,  0,  0,  2,]]
        )
    )
    # fmt: on
    assert np.all(
        point_gen.pts_k2(np.zeros(4), 1)
        == np.array(
            # fmt: off
        [[-1, -1,  0,  0,], [ 1, -1,  0,  0,], [-1,  1,  0,  0,], [ 1,  1,  0,  0,],
         [-1,  0, -1,  0,], [ 1,  0, -1,  0,], [-1,  0,  1,  0,], [ 1,  0,  1,  0,],
         [-1,  0,  0, -1,], [ 1,  0,  0, -1,], [-1,  0,  0,  1,], [ 1,  0,  0,  1,],
         [ 0, -1, -1,  0,], [ 0,  1, -1,  0,], [ 0, -1,  1,  0,], [ 0,  1,  1,  0,],
         [ 0, -1,  0, -1,], [ 0,  1,  0, -1,], [ 0, -1,  0,  1,], [ 0,  1,  0,  1,],
         [ 0,  0, -1, -1,], [ 0,  0,  1, -1,], [ 0,  0, -1,  1,], [ 0,  0,  1,  1,]]
        )
    )
    # fmt: on
    assert np.all(
        point_gen.pts_k6(np.zeros(4), 1)
        == np.array(
            # fmt: off
        [[-1, -1, -1, -1,], [-1, -1, -1,  1,], [-1, -1,  1, -1,], [-1, -1,  1,  1,],
         [-1,  1, -1, -1,], [-1,  1, -1,  1,], [-1,  1,  1, -1,], [-1,  1,  1,  1,],
         [ 1, -1, -1, -1,], [ 1, -1, -1,  1,], [ 1, -1,  1, -1,], [ 1, -1,  1,  1,],
         [ 1,  1, -1, -1,], [ 1,  1, -1,  1,], [ 1,  1,  1, -1,], [ 1,  1,  1,  1,]]
        )
    )
    # fmt: on

    v = np.concatenate(
        (
            point_gen.pts_k0k1(np.zeros(4), 1, 2),
            point_gen.pts_k2(np.zeros(4), 1),
            point_gen.pts_k6(np.zeros(4), 1),
        )
    )
    assert np.all(point_gen.fullsym(np.zeros(4), 1, 2, 1, 1) == v)
